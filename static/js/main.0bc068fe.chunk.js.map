{"version":3,"sources":["helper/APICalls.js","helper/People.js","helper/Vehicles.js","helper/Planets.js","helper/Films.js","Splash/Splash.js","images.js","side.js","Card/Card.js","CardContainer/CardContainer.js","Yoda/Yoda.js","Button/Button.js","Menu/Menu.js","Main/Main.js","App/App.js","serviceWorker.js","index.js","helper/localStorage.js"],"names":["fetchData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","t0","stop","this","_x","apply","arguments","People","_this","classCallCheck","fetchPeople","cleanPeople","localStorage","people","setLocalStorage","getLocalStorage","_ref2","_callee3","peopleData","_context3","results","map","_ref3","_callee2","person","world","species","_context2","fetchHomeworld","homeworld","fetchSpecies","name","population","favorite","_x2","Promise","all","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4","Vehicles","fetchVehicles","cleanVehicles","vehicles","vehicleData","vehicle","model","class","vehicle_class","passengers","Planets","fetchPlanets","cleanPlanets","planets","planetData","planet","residents","fetchResidents","terrain","climate","resident","residentData","Films","fetchFilms","Splash","possibleConstructorReturn","getPrototypeOf","call","state","film","films","randomNumber","Math","floor","random","setState","react_default","createElement","className","Link","to","type","title","opening_crawl","Component","Images","Luke Skywalker","C-3PO","R2-D2","Bespin","Alderaan","Coruscant","Dagobah","Endor","Geonosis","Hoth","Kamino","Naboo","Yavin IV","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Sand Crawler","T-16 skyhopper","X-34 landspeeder","TIE/LN starfighter","Snowspeeder","TIE bomber","AT-AT","AT-ST","Storm IV Twin-Pod cloud car","Sail barge","white-saber","green-saber","red-saber","Side","Card","props","favorited","info","keys","item","filter","key","src","alt","onClick","handleFavorite","itemType","CardContainer","cards","src_Card_Card","length","Yoda","Button","numOfFavorites","favorites","NavLink","concat","Menu","htmlFor","id","src_Button_Button","Main","src_Menu_Menu","Route","exact","path","component","render","src_CardContainer_CardContainer","App","_this$setState","updatedItems","newFavorites","find","toggleItemState","toConsumableArray","defineProperty","_this2","src_Main_Main","assign","Boolean","window","location","hostname","match","router","BrowserRouter","src_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","cleanItems","setItem","JSON","stringify","parse","getItem"],"mappings":"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","file":"static/js/main.0bc068fe.chunk.js","sourcesContent":["const fetchData = async (url) => {\n  try {\n    const response = await fetch(url)\n    const data = await response.json()\n    return data\n  } catch (error) {\n    return error\n  }\n}\n\nexport default fetchData\n","import fetchData from './APICalls'\nimport { setLocalStorage, getLocalStorage } from './localStorage'\n\nexport default class People {\n  constructor() {\n    this.fetchData = fetchData\n  }\n\n  fetchPeople = async () => {\n    if (!localStorage.people) {\n      const url = 'https://swapi.co/api/people/'\n      const data = await this.fetchData(url)\n      const cleanPeople = await this.cleanPeople(data)\n      setLocalStorage(cleanPeople, 'people')\n    }\n    return getLocalStorage('people')\n  }\n\n  cleanPeople = async (data) => {\n    const peopleData = data.results.map(async (person) => {\n      const world = await this.fetchHomeworld(person.homeworld)\n      const species = await this.fetchSpecies(person.species)\n      return {\n        name: person.name,\n        homeworld: world.homeworld,\n        species: species.species,\n        population: world.population,\n        favorite: false\n      }\n    })\n    return Promise.all(peopleData)\n  }\n\n  fetchHomeworld = async (url) => {\n    const data = await this.fetchData(url)\n    return {\n      homeworld: data.name,\n      population: data.population\n    }\n  }\n\n  fetchSpecies = async (url) => {\n    const data = await this.fetchData(url)\n    return {\n      species: data.name\n    }\n  }\n}\n","import fetchData from './APICalls'\nimport { setLocalStorage, getLocalStorage } from './localStorage'\n\nexport default class Vehicles {\n  constructor() {\n    this.fetchData = fetchData\n  }\n\n  fetchVehicles = async () => {\n    if (!localStorage.vehicles) {\n      const url = 'https://swapi.co/api/vehicles/'\n      const data = await this.fetchData(url)\n      const cleanVehicles = await this.cleanVehicles(data)\n      setLocalStorage(cleanVehicles, 'vehicles')\n    }\n    return getLocalStorage('vehicles')\n  }\n\n  cleanVehicles = (data) => {\n    const vehicleData = data.results.map(vehicle => ({\n      name: vehicle.name,\n      model: vehicle.model,\n      class: vehicle.vehicle_class,\n      passengers: vehicle.passengers,\n      favorite: false\n    }\n    ))\n    return Promise.all(vehicleData)\n  }\n}\n","import fetchData from './APICalls'\nimport { setLocalStorage, getLocalStorage } from './localStorage'\n\nexport default class Planets {\n  constructor() {\n    this.fetchData = fetchData\n  }\n\n  fetchPlanets = async () => {\n    if (!localStorage.planets) {\n      const url = 'https://swapi.co/api/planets/'\n      const data = await this.fetchData(url)\n      const cleanPlanets = await this.cleanPlanets(data)\n      setLocalStorage(cleanPlanets, 'planets')\n    }\n    return getLocalStorage('planets')\n  }\n\n  cleanPlanets = async (data) => {\n    const planetData = data.results.map(async (planet) => {\n      const residents = await this.fetchResidents(planet.residents)\n      return {\n        name: planet.name,\n        terrain: planet.terrain,\n        population: planet.population,\n        climate: planet.climate,\n        residents,\n        favorite: false\n      }\n    })\n    return Promise.all(planetData)\n  }\n\n  fetchResidents = async (residents) => {\n    const data = await residents.map(async (resident) => {\n      const residentData = await this.fetchData(resident)\n      return residentData.name\n    })\n    return Promise.all(data)\n  }\n}\n","import fetchData from './APICalls'\n\nexport default class Films {\n  constructor() {\n    this.fetchData = fetchData\n  }\n\n  fetchFilms = async () => {\n    const url = 'https://swapi.co/api/films/'\n\n    return this.fetchData(url)\n  }\n}\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Films from '../helper/Films'\nimport './Splash.scss'\n\nexport default class Splash extends Component {\n  constructor() {\n    super()\n    this.state = {\n      film: null\n    }\n  }\n\n  async componentDidMount() {\n    this.films = new Films()\n    const film = await this.films.fetchFilms()\n    const randomNumber = Math.floor(Math.random() * 7)\n\n    this.setState({\n      film: film.results[randomNumber]\n    })\n  }\n\n  render() {\n    const { film } = this.state\n    return (\n      film\n        ? (\n          <div className=\"splash\">\n            <div className=\"fade\">\n              <h1 className=\"logo\">SWAPi Box</h1>\n              <Link to=\"/main/\">\n                <button type=\"button\" className=\"enter-btn\">$</button>\n              </Link>\n              <p className=\"enter-site\">Click to Enter</p>\n            </div>\n            <section className=\"star-wars\">\n              <div className=\"crawl\">\n                <h2 className=\"film-title\">{ film.title }</h2>\n                <p className=\"film-body\">{ film.opening_crawl }</p>\n              </div>\n            </section>\n          </div>\n        )\n        : <div className=\"splash\">Loading...</div>\n    )\n  }\n}\n","const Images = {\n  'Luke Skywalker': '../images/Luke.png',\n  \"C-3PO\":'../images/C3PO.png',\n  \"R2-D2\": '../images/R2D2.png',\n  'Bespin': '../images/bespin.png',\n  'Alderaan': '../images/alderaan.jpg',\n  'Coruscant': '../images/coruscant.png',\n  'Dagobah': '../images/dagobah.jpg',\n  'Endor': '../images/endor.jpg',\n  'Geonosis': '../images/geonosis.jpg',\n  'Hoth': '../images/hoth.png',\n  'Kamino': '../images/kamino.jpg',\n  'Naboo': '../images/naboo.png',\n  'Yavin IV': '../images/bespin.png',\n  \"Darth Vader\": '../images/vader.png',\n  \"Leia Organa\": '../images/leia.png',\n  \"Owen Lars\": '../images/owen.png',\n  \"Beru Whitesun lars\": '../images/beru.png',\n  \"R5-D4\": '../images/r5d4.png',\n  \"Biggs Darklighter\": '../images/biggs.png',\n  \"Obi-Wan Kenobi\": '../images/obiwan.png',\n  \"Sand Crawler\": '../images/sandcrawler.png',\n  \"T-16 skyhopper\": '../images/skyhopper.png',\n  \"X-34 landspeeder\": '../images/landspeeder.png',\n  \"TIE/LN starfighter\": '../images/starfighter.png',\n  \"Snowspeeder\": '../images/snowspeeder.png',\n  \"TIE bomber\": '../images/bomber.png',\n  \"AT-AT\": '../images/atat.png',\n  \"AT-ST\": '../images/atst.png',\n  \"Storm IV Twin-Pod cloud car\": '../images/storm.png',\n  \"Sail barge\": '../images/sail.png',\n  \"white-saber\": '../images/white-lightsaber.svg',\n  'green-saber': '../images/green-lightsaber.svg',\n  'red-saber': '../images/red-lightsaber.svg'\n}\n\nexport default Images;","const Side = {\n  'Luke Skywalker': 'light',\n  \"C-3PO\":'light',\n  \"R2-D2\": 'light',\n  'Bespin': 'light',\n  'Alderaan': 'light',\n  'Coruscant': 'dark',\n  'Dagobah': 'light',\n  'Endor': 'light',\n  'Geonosis': 'dark',\n  'Hoth': 'dark',\n  'Kamino': 'dark',\n  'Naboo': 'light',\n  'Yavin IV': 'dark',\n  \"Darth Vader\": 'dark',\n  \"Leia Organa\": 'light',\n  \"Owen Lars\": 'light',\n  \"Beru Whitesun lars\": 'light',\n  \"R5-D4\": 'light',\n  \"Biggs Darklighter\": 'light',\n  \"Obi-Wan Kenobi\": 'light',\n  \"Sand Crawler\": 'dark',\n  \"T-16 skyhopper\": 'dark',\n  \"X-34 landspeeder\": 'light',\n  \"TIE/LN starfighter\": 'dark',\n  \"Snowspeeder\": 'light',\n  \"TIE bomber\": 'dark',\n  \"AT-AT\": 'dark',\n  \"AT-ST\": 'dark',\n  \"Storm IV Twin-Pod cloud car\": 'light',\n  \"Sail barge\": 'dark'\n}\n\nexport default Side","import React from 'react'\nimport './Card.scss'\nimport PropTypes from 'prop-types'\nimport Images from '../images'\nimport Side from '../side'\n\nconst Card = (props) => {\n  const allInfo = Object.keys(props.item).filter(key => (key !== 'favorite'))\n\n  const info = allInfo.map((key) => {\n    if (key === 'name') {\n      return <h1 key={key}>{props.item[key]}</h1>\n    }\n    return <p key={key}>{key}: {props.item[key]}</p>\n  })\n\n  let favorited\n\n  if (!props.item.favorite) {\n    favorited = 'white-saber'\n  } else if (Side[props.item.name] === 'light') {\n    favorited = 'green-saber'\n  } else {\n    favorited = 'red-saber'\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"black-bg\" />\n      <div className=\"card-info\">\n        { info }\n      </div>\n      <img className=\"card-image\" src={Images[props.item.name]} alt={Images[props.item.name]} />\n      <div className=\"gradient\" />\n      <button type=\"button\" className=\"favorite\" onClick={() => props.handleFavorite(props.item, props.itemType)}>\n        <img src={Images[favorited]} className=\"white-saber\" alt=\"lightsaber\" />\n      </button>\n      <div className=\"card-text-background\" />\n    </div>\n  )\n}\n\nexport default Card\n\nCard.propTypes = {\n  item: PropTypes.instanceOf(Object).isRequired,\n  handleFavorite: PropTypes.func.isRequired,\n  itemType: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from '../Card/Card'\nimport './CardContainer.scss'\n\nconst CardContainer = (props) => {\n  const cards = props.data.map(item => (\n    <Card\n      item={item}\n      handleFavorite={props.handleFavorite}\n      itemType={props.itemType}\n      key={item.name}\n    />))\n\n  return (\n    <div className=\"card-container\">\n      <h3 className=\"tap-to-favorite\">Tap the lightsaber to favorite</h3>\n      <div className=\"cards\">\n        {\n          cards.length ? cards : <h1 className=\"no-favorites\">No favorites you have</h1>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default CardContainer\n\nCardContainer.propTypes = {\n  handleFavorite: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  itemType: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport './Yoda.scss'\n\n\nconst Yoda = () => (\n  <div className=\"yoda-container\">\n    <p className=\"choose-path\">Choose a path you must...</p>\n    <img src=\"../images/yoda.png\" alt=\"Yoda\" />\n    <div className=\"lightsaber\">\n      <div className=\"saber\" />\n      <div className=\"handle\" />\n    </div>\n  </div>\n)\n\nexport default Yoda\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport './Button.scss'\nimport '../Menu/Menu.scss'\n\n\nconst Button = (props) => {\n  const numOfFavorites = props.favorites.length ? props.favorites.length : ''\n  return (\n    <li className=\"menu-item\">\n      <NavLink to={`/main/${props.name}`} className=\"nav-btn\">\n        {`${props.name} ${numOfFavorites}`}\n      </NavLink>\n    </li>\n  )\n}\n\nexport default Button\n\nButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  favorites: PropTypes.instanceOf(Array).isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../Button/Button'\nimport './Menu.scss'\n\n\nconst Menu = props => (\n  <div className=\"nav\">\n    <label htmlFor=\"menu-toggler\">\n      <h3>$</h3>\n      <input className=\"menu-toggler\" id=\"menu-toggler\" type=\"checkbox\" />\n      <ul>\n        <Button name=\"vehicles\" favorites={[]} />\n        <Button name=\"People\" favorites={[]} />\n        <Button name=\"Planets\" favorites={[]} />\n        <Button name=\"Favorites\" favorites={props.favorites} />\n      </ul>\n    </label>\n    <div className=\"orbit orbit1\" />\n    <div className=\"orbit orbit2\" />\n    <div className=\"orbit orbit3\" />\n    <div className=\"orbit orbit4\" />\n  </div>\n)\n\nexport default Menu\n\nMenu.propTypes = {\n  favorites: PropTypes.instanceOf(Array).isRequired\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport CardContainer from '../CardContainer/CardContainer'\nimport Yoda from '../Yoda/Yoda'\nimport Menu from '../Menu/Menu'\n\nconst Main = ({\n  vehicles,\n  planets,\n  people,\n  favorites,\n  handleFavorite\n}) => (\n  <div className=\"app\">\n    <div className=\"stars\" />\n    <div className=\"twinkling\" />\n    <Menu favorites={favorites} />\n    <Route exact path=\"/main\" component={Yoda} />\n    <Route exact path=\"/main/People\" render={() => <CardContainer itemType=\"people\" data={people} handleFavorite={handleFavorite} />} />\n    <Route exact path=\"/main/vehicles\" render={() => <CardContainer itemType=\"vehicles\" data={vehicles} handleFavorite={handleFavorite} />} />\n    <Route exact path=\"/main/Planets\" render={() => <CardContainer itemType=\"planets\" data={planets} handleFavorite={handleFavorite} />} />\n    <Route exact path=\"/main/Favorites\" render={() => <CardContainer itemType=\"favorites\" data={favorites} handleFavorite={handleFavorite} />} />\n  </div>\n)\n\nexport default Main\n\nMain.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  vehicles: PropTypes.arrayOf(PropTypes.object).isRequired,\n  planets: PropTypes.arrayOf(PropTypes.object).isRequired,\n  favorites: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handleFavorite: PropTypes.func.isRequired\n}\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport People from '../helper/People'\nimport Vehicles from '../helper/Vehicles'\nimport Planets from '../helper/Planets'\nimport Splash from '../Splash/Splash'\nimport Main from '../Main/Main'\nimport { getLocalStorage, setLocalStorage } from '../helper/localStorage'\nimport './App.scss'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      people: [],\n      vehicles: [],\n      planets: [],\n      favorites: []\n    }\n  }\n\n  async componentDidMount() {\n    this.people = new People()\n    this.vehicles = new Vehicles()\n    this.planets = new Planets()\n\n    this.setState({\n      people: await this.people.fetchPeople(),\n      vehicles: await this.vehicles.fetchVehicles(),\n      planets: await this.planets.fetchPlanets(),\n      favorites: getLocalStorage('favorites') || []\n    })\n  }\n\n  handleFavorite = (data, itemType) => {\n    const { favorites } = this.state\n    let updatedItems\n    let newFavorites\n\n    const found = favorites.find(item => item.name === data.name)\n\n    if (!found) {\n      updatedItems = this.toggleItemState(data, itemType)\n      data.favorite = true\n      newFavorites = [...favorites, data]\n    } else {\n      updatedItems = this.toggleItemState(data, itemType)\n      data.favorite = false\n      newFavorites = favorites.filter(item => item.name !== data.name)\n    }\n\n    setLocalStorage(updatedItems, itemType)\n    setLocalStorage(newFavorites, 'favorites')\n\n    this.setState({\n      [itemType]: updatedItems,\n      favorites: newFavorites\n    })\n  }\n\n  toggleItemState = (data, itemType) => (\n    this.state[itemType].map((item) => {\n      if (item === data) {\n        item.favorite = !item.favorite\n      }\n      return item\n    })\n  )\n\n  render() {\n    return (\n      <div>\n        <Route exact path=\"/\" component={Splash} />\n        <Route path=\"/main\" render={() => <Main {...this.state} handleFavorite={this.handleFavorite} />} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const setLocalStorage = (cleanItems, itemType) => {\n  localStorage.setItem(itemType, JSON.stringify(cleanItems))\n}\n\nconst getLocalStorage = (itemType) => {\n  const items = JSON.parse(localStorage.getItem(itemType))\n  return items\n}\n\nmodule.exports = { setLocalStorage, getLocalStorage }\n"],"sourceRoot":""}