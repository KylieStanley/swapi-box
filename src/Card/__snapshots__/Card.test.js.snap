// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Card
    handleFavorite={[MockFunction]}
    item={
      Object {
        "favorite": false,
        "homeworld": "Tatooine",
        "name": "Luke Skywalker",
        "population": 20000000,
        "species": "human",
      }
    }
    itemType="people"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1
          className="card-text"
        >
          Luke Skywalker
        </h1>,
        <div
          className="card-info"
        >
          <p>
            homeworld
            : 
            Tatooine
          </p>
          <p>
            species
            : 
            human
          </p>
          <p>
            population
            : 
            20000000
          </p>
        </div>,
        <img
          alt="../images/Luke.png"
          className="card-image"
          src="../images/Luke.png"
        />,
        <button
          className="favorite"
          onClick={[Function]}
        >
          <img
            alt="lightsaber"
            className="white-saber"
            src="../images/white-lightsaber.svg"
          />
        </button>,
      ],
      "className": "card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Luke Skywalker",
          "className": "card-text",
        },
        "ref": null,
        "rendered": "Luke Skywalker",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p>
              homeworld
              : 
              Tatooine
            </p>,
            <p>
              species
              : 
              human
            </p>,
            <p>
              population
              : 
              20000000
            </p>,
          ],
          "className": "card-info",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "homeworld",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "homeworld",
                ": ",
                "Tatooine",
              ],
            },
            "ref": null,
            "rendered": Array [
              "homeworld",
              ": ",
              "Tatooine",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": "species",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "species",
                ": ",
                "human",
              ],
            },
            "ref": null,
            "rendered": Array [
              "species",
              ": ",
              "human",
            ],
            "type": "p",
          },
          Object {
            "instance": null,
            "key": "population",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "population",
                ": ",
                20000000,
              ],
            },
            "ref": null,
            "rendered": Array [
              "population",
              ": ",
              20000000,
            ],
            "type": "p",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "../images/Luke.png",
          "className": "card-image",
          "src": "../images/Luke.png",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            alt="lightsaber"
            className="white-saber"
            src="../images/white-lightsaber.svg"
          />,
          "className": "favorite",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "lightsaber",
            "className": "white-saber",
            "src": "../images/white-lightsaber.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "button",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1
            className="card-text"
          >
            Luke Skywalker
          </h1>,
          <div
            className="card-info"
          >
            <p>
              homeworld
              : 
              Tatooine
            </p>
            <p>
              species
              : 
              human
            </p>
            <p>
              population
              : 
              20000000
            </p>
          </div>,
          <img
            alt="../images/Luke.png"
            className="card-image"
            src="../images/Luke.png"
          />,
          <button
            className="favorite"
            onClick={[Function]}
          >
            <img
              alt="lightsaber"
              className="white-saber"
              src="../images/white-lightsaber.svg"
            />
          </button>,
        ],
        "className": "card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Luke Skywalker",
            "className": "card-text",
          },
          "ref": null,
          "rendered": "Luke Skywalker",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p>
                homeworld
                : 
                Tatooine
              </p>,
              <p>
                species
                : 
                human
              </p>,
              <p>
                population
                : 
                20000000
              </p>,
            ],
            "className": "card-info",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "homeworld",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "homeworld",
                  ": ",
                  "Tatooine",
                ],
              },
              "ref": null,
              "rendered": Array [
                "homeworld",
                ": ",
                "Tatooine",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": "species",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "species",
                  ": ",
                  "human",
                ],
              },
              "ref": null,
              "rendered": Array [
                "species",
                ": ",
                "human",
              ],
              "type": "p",
            },
            Object {
              "instance": null,
              "key": "population",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "population",
                  ": ",
                  20000000,
                ],
              },
              "ref": null,
              "rendered": Array [
                "population",
                ": ",
                20000000,
              ],
              "type": "p",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "../images/Luke.png",
            "className": "card-image",
            "src": "../images/Luke.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              alt="lightsaber"
              className="white-saber"
              src="../images/white-lightsaber.svg"
            />,
            "className": "favorite",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "lightsaber",
              "className": "white-saber",
              "src": "../images/white-lightsaber.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "button",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
